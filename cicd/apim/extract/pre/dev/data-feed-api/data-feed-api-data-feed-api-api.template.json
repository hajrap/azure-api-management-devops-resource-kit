{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "ApimServiceName": {
      "type": "string"
    },
    "serviceUrl": {
      "type": "object"
    }
  },
  "resources": [
    {
      "properties": {
        "description": "Call the Data Feed API to post various messages in the format of name value pairs to Sydney Water backend Data Feed services. ",
        "authenticationSettings": {
          "subscriptionKeyRequired": false
        },
        "subscriptionKeyParameterNames": {
          "header": "Ocp-Apim-Subscription-Key",
          "query": "subscription-key"
        },
        "apiRevision": "2",
        "apiVersion": "v1",
        "isCurrent": true,
        "apiRevisionDescription": "added  decryption logic ",
        "apiVersionSetId": "[concat(resourceId('Microsoft.ApiManagement/service', parameters('ApimServiceName')), '/apiVersionSets/60aeee99b7e1ef94875851e7')]",
        "subscriptionRequired": true,
        "displayName": "Data Feed API",
        "serviceUrl": "[parameters('serviceUrl').datafeedapi]",
        "path": "data-feed",
        "protocols": [
          "https"
        ]
      },
      "name": "[concat(parameters('ApimServiceName'), '/data-feed-api')]",
      "type": "Microsoft.ApiManagement/service/apis",
      "apiVersion": "2021-01-01-preview",
      "dependsOn": []
    },
    {
      "properties": {
        "contentType": "application/vnd.oai.openapi.components+json",
        "document": {
          "components": {
            "schemas": {
              "DataFeedPost-RequestBillPayment": {
                "type": "object",
                "example": {
                  "SubmitDataFeedRequest": {
                    "Header": {
                      "Action": "submitDataFeed",
                      "MessageId": "9729ec91-7cc0-4faa-8449-267f2df5741a",
                      "CorrelationId": "da4554ed-44f6-472e-a528-4875512908e5",
                      "Timestamp": "2021-04-12T07:43:01.775Z",
                      "Source": "BillPayment",
                      "Type": "IN"
                    },
                    "SubmitDataFeedRequestPayload": {
                      "ProcessKey": "InternetSWCForm",
                      "PayloadData": {
                        "FormName": "BillPayment",
                        "AttributeList": {
                          "Attribute": [
                            {
                              "Name": "TransactionId",
                              "Value": 12345672612
                            },
                            {
                              "Name": "PaymentNumber",
                              "Value": 67894850006
                            },
                            {
                              "Name": "Amount",
                              "Value": 146.29
                            },
                            {
                              "Name": "PaymentDate",
                              "Value": "2021-12-04T00:00:00Z"
                            },
                            {
                              "Name": "email_external",
                              "Value": "test@gmail.com"
                            }
                          ]
                        }
                      }
                    }
                  }
                }
              },
              "DataFeedPost-200Response": {
                "type": "object",
                "example": {
                  "SubmitDataFeedResponse": {
                    "Header": {
                      "Action": "JavaWebService",
                      "MessageId": "9729ec91-7cc0-4faa-8449-267f2df5741a",
                      "CorrelationId": "da4554ed-44f6-472e-a528-4875512908e5",
                      "Timestamp": "2021-04-12T07:43:01.775Z",
                      "Source": "ESB",
                      "ReplyTo": null,
                      "Type": "OUT",
                      "UserId": null
                    },
                    "SubmitDataFeedResponsePayload": {
                      "OperationStatus": "0",
                      "OperationDesc": "SUCCESS"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "name": "[concat(parameters('ApimServiceName'), '/data-feed-api/60af548ad7e96917686e87df')]",
      "type": "Microsoft.ApiManagement/service/apis/schemas",
      "apiVersion": "2021-01-01-preview",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'data-feed-api')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [],
        "description": "Submit form data as name values pairs.",
        "request": {
          "queryParameters": [],
          "headers": [
            {
              "name": "ApplicationID",
              "description": "Send System APP ID – All interaction from source system should have same Application ID.",
              "type": "string",
              "required": true,
              "values": [
                "SYM"
              ]
            },
            {
              "name": "TransactionContextID",
              "description": "Supply GUID – It is generated once at the initiation point of the transaction and is propagated throughout the transaction lifecycle through the service execution.",
              "type": "string",
              "required": true,
              "values": []
            },
            {
              "name": "UserID",
              "description": "End user initiating the transaction.",
              "type": "string",
              "required": true,
              "values": [
                "xb4"
              ]
            },
            {
              "name": "Version",
              "description": "Version of the API to be called. Use the value specified in example (highest version)",
              "type": "string",
              "required": true,
              "values": [
                "1.0"
              ]
            },
            {
              "name": "MessageTraceID",
              "description": "This element is a unique identifier associated with each message. Response and Fault messages should have a distinct MessageTraceID from request messages. Element can be used to achieve idempotent behaviour on server side.",
              "type": "string",
              "required": false,
              "values": []
            }
          ],
          "representations": [
            {
              "contentType": "application/json",
              "sample": "{}",
              "schemaId": "60af548ad7e96917686e87df",
              "typeName": "DataFeedPost-RequestBillPayment"
            },
            {
              "contentType": "application/json",
              "sample": "{}",
              "schemaId": "60af548ad7e96917686e87df"
            },
            {
              "contentType": "application/json",
              "sample": "{}",
              "schemaId": "60af548ad7e96917686e87df"
            }
          ]
        },
        "responses": [
          {
            "statusCode": 200,
            "description": "Successful Operation",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json",
                "sample": "{}",
                "schemaId": "60af548ad7e96917686e87df",
                "typeName": "DataFeedPost-200Response"
              }
            ]
          }
        ],
        "displayName": "Submit",
        "method": "POST",
        "urlTemplate": "/DataFeed"
      },
      "name": "[concat(parameters('ApimServiceName'), '/data-feed-api/Submit')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2021-01-01-preview",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'data-feed-api')]",
        "[resourceId('Microsoft.ApiManagement/service/apis/schemas', parameters('ApimServiceName'), 'data-feed-api', '60af548ad7e96917686e87df')]"
      ]
    },
    {
      "properties": {
        "value": "<!--\n    IMPORTANT:\n    - Policy elements can appear only within the <inbound>, <outbound>, <backend> section elements.\n    - To apply a policy to the incoming request (before it is forwarded to the backend service), place a corresponding policy element within the <inbound> section element.\n    - To apply a policy to the outgoing response (before it is sent back to the caller), place a corresponding policy element within the <outbound> section element.\n    - To add a policy, place the cursor at the desired insertion point and select a policy from the sidebar.\n    - To remove a policy, delete the corresponding policy statement from the policy document.\n    - Position the <base> element within a section element to inherit all policies from the corresponding section element in the enclosing scope.\n    - Remove the <base> element to prevent inheriting policies from the corresponding section element in the enclosing scope.\n    - Policies are applied in the order of their appearance, from the top down.\n    - Comments within policy elements are not supported and may disappear. Place your comments between policy elements or at a higher level scope.\n-->\r\n<policies>\r\n\t<inbound>\r\n\t\t<base />\r\n\t\t<set-body>@{\n                    string keyToDecrypt1 = \"propertyNumber\";\n                    string keyToDecrypt2 = \"propertyNo\";\n                    string jsonPath = \"$.SubmitDataFeedRequest..Attribute[?(@Name == 'propertyNumber'  || @Name == 'propertyNo' )]\";\n                    string keyToSearch = \"Name\";\n                    string keyValueToSearch = \"Value\";\n\n                    JObject o = context.Request.Body.As<JObject>(preserveContent: true);\n                    var items = o.SelectTokens(jsonPath);\n                    if (items != null)\n                    {\n                        byte[] IV = Convert.FromBase64String(\"{{api-encryptiv}}\");\n                        byte[] key = Convert.FromBase64String(\"{{api-encryptkey}}\");\n                        string encryptExcpetions = \"{{encrypt-exception-values}}\";\n                        string[] arrEncryptExceptions = encryptExcpetions.Split(',');            \n\n                        foreach (JToken item in items)\n                        {\n                            JToken keyToken = item[keyToSearch];\n                            if (keyToken != null && (keyToken.ToString() == keyToDecrypt1 ||keyToken.ToString() == keyToDecrypt2))\n                            {                                \n                                JToken keyTokenValue = item[keyValueToSearch];\n                                if (keyTokenValue != null && !string.IsNullOrEmpty(keyTokenValue.ToString()))\n                                {\n                                    string encryptedValue = keyTokenValue.ToString();\n                                    bool toDecrypt = (Array.Exists(arrEncryptExceptions, e => e.Trim() == encryptedValue.Trim())) ? false : true;\n                                    if (toDecrypt)\n                                    {\n                                        string urlDecodedValue =  System.Net.WebUtility.UrlDecode(encryptedValue);\n                                        byte[] urlDecodedByte = Convert.FromBase64String(urlDecodedValue);\n                                        byte[] decryptedBytes = urlDecodedByte.Decrypt(\"Aes\", key, IV);\n                                        char[] convertedBytesToChar = Encoding.UTF8.GetString(decryptedBytes).ToCharArray();\n                                        string decryptedValue = Encoding.UTF8.GetString(Encoding.UTF8.GetBytes(convertedBytesToChar));\n                                        item[keyValueToSearch] = decryptedValue;\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    return o.ToString();\n        }</set-body>\r\n\t</inbound>\r\n\t<backend>\r\n\t\t<base />\r\n\t</backend>\r\n\t<outbound>\r\n\t\t<base />\r\n\t</outbound>\r\n\t<on-error>\r\n\t\t<base />\r\n\t</on-error>\r\n</policies>",
        "format": "rawxml"
      },
      "name": "[concat(parameters('ApimServiceName'), '/data-feed-api/Submit/policy')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/policies",
      "apiVersion": "2021-01-01-preview",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'data-feed-api', 'Submit')]"
      ]
    },
    {
      "properties": {
        "value": "<!--\n    IMPORTANT:\n    - Policy elements can appear only within the <inbound>, <outbound>, <backend> section elements.\n    - To apply a policy to the incoming request (before it is forwarded to the backend service), place a corresponding policy element within the <inbound> section element.\n    - To apply a policy to the outgoing response (before it is sent back to the caller), place a corresponding policy element within the <outbound> section element.\n    - To add a policy, place the cursor at the desired insertion point and select a policy from the sidebar.\n    - To remove a policy, delete the corresponding policy statement from the policy document.\n    - Position the <base> element within a section element to inherit all policies from the corresponding section element in the enclosing scope.\n    - Remove the <base> element to prevent inheriting policies from the corresponding section element in the enclosing scope.\n    - Policies are applied in the order of their appearance, from the top down.\n    - Comments within policy elements are not supported and may disappear. Place your comments between policy elements or at a higher level scope.\n-->\r\n<policies>\r\n\t<inbound>\r\n\t\t<base />\r\n\t\t<authentication-basic username=\"{{api-authentication-username}}\" password=\"{{api-authentication-password}}\" />\r\n\t</inbound>\r\n\t<backend>\r\n\t\t<base />\r\n\t</backend>\r\n\t<outbound>\r\n\t\t<base />\r\n\t</outbound>\r\n\t<on-error>\r\n\t\t<base />\r\n\t</on-error>\r\n</policies>",
        "format": "rawxml"
      },
      "name": "[concat(parameters('ApimServiceName'), '/data-feed-api/policy')]",
      "type": "Microsoft.ApiManagement/service/apis/policies",
      "apiVersion": "2021-01-01-preview",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'data-feed-api')]"
      ]
    },
    {
      "name": "[concat(parameters('ApimServiceName'), '/non-self-service-apis/data-feed-api')]",
      "type": "Microsoft.ApiManagement/service/products/apis",
      "apiVersion": "2021-01-01-preview",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'data-feed-api')]"
      ]
    },
    {
      "properties": {
        "alwaysLog": "allErrors",
        "loggerId": "/subscriptions/7fdba8aa-bd1e-4895-aff7-b64589d0a27e/resourceGroups/rg-corenonprod01-integration-00/providers/Microsoft.ApiManagement/service/apim-corenonprod01-integration-00/loggers/appInsightsPrimaryDeploy",
        "httpCorrelationProtocol": "Legacy",
        "verbosity": "information",
        "logClientIp": true,
        "sampling": {
          "samplingType": "fixed",
          "percentage": 100.0
        },
        "frontend": {
          "request": {
            "headers": [
              "TransactionContextID",
              "ApplicationID",
              "UserID",
              "Version",
              "apim-correlation-id"
            ],
            "body": {
              "bytes": 8192
            }
          },
          "response": {
            "headers": [
              "apim-correlation-id"
            ],
            "body": {
              "bytes": 8192
            }
          }
        },
        "backend": {
          "request": {
            "headers": [],
            "body": {
              "bytes": 8192
            }
          },
          "response": {
            "headers": [],
            "body": {
              "bytes": 8192
            }
          }
        }
      },
      "name": "[concat(parameters('ApimServiceName'), '/applicationinsights')]",
      "type": "Microsoft.ApiManagement/service/diagnostics",
      "apiVersion": "2021-01-01-preview",
      "dependsOn": []
    },
    {
      "properties": {
        "loggerId": "/subscriptions/7fdba8aa-bd1e-4895-aff7-b64589d0a27e/resourceGroups/rg-corenonprod01-integration-00/providers/Microsoft.ApiManagement/service/apim-corenonprod01-integration-00/loggers/azuremonitor",
        "logClientIp": true,
        "sampling": {
          "samplingType": "fixed",
          "percentage": 100.0
        }
      },
      "name": "[concat(parameters('ApimServiceName'), '/azuremonitor')]",
      "type": "Microsoft.ApiManagement/service/diagnostics",
      "apiVersion": "2021-01-01-preview",
      "dependsOn": []
    }
  ]
}